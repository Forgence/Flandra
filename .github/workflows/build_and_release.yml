name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.2

    - name: Run tests
      working-directory: ./src
      run: go test -v ./...

    - name: Get the date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"
      shell: bash

    - name: Build executables
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.2
      run: |
        GOOS=${{ matrix.os }} GOARCH=amd64 go build -o ./src/flandra-${{ matrix.os }}-amd64${{ matrix.extension }}
      working-directory: ./src
      strategy:
        matrix:
          os: [windows, darwin, linux]
          include:
            - os: windows
              extension: .exe

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: Flandra Release ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false

    - name: Upload Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/flandra-${{ matrix.os }}-amd64${{ matrix.extension }}
        asset_name: flandra-${{ matrix.os }}-amd64${{ matrix.extension }}
        asset_content_type: application/octet-stream
